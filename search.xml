<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>详解@RequestParam</title>
      <link href="/posts/f43726f7/"/>
      <url>/posts/f43726f7/</url>
      
        <content type="html"><![CDATA[<h3 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h3><p>在Java中，<code>@RequestParam</code> 是一个注解，用于从HTTP请求中获取参数值。它通常用于Spring MVC框架中的控制器方法中，以指定方法参数应该绑定到HTTP请求中的特定参数。</p><p><code>@RequestParam</code> 可以用于处理HTTP请求的查询参数、表单参数或路径参数。它可以应用于方法的参数或方法的参数上的注解。</p><p>下面是一些示例：</p><ol><li>使用默认参数名称：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/example&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">exampleMethod</span><span class="params">(<span class="meta">@RequestParam</span> String param)</span> &#123;</span><br><span class="line">    <span class="comment">// 方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码将尝试从HTTP请求中获取名为 “param” 的查询参数，并将其绑定到方法参数 <code>param</code>。</p><ol start="2"><li>使用自定义参数名称：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/example&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">exampleMethod</span><span class="params">(<span class="meta">@RequestParam(&quot;customParam&quot;)</span> String param)</span> &#123;</span><br><span class="line">    <span class="comment">// 方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个示例中，<code>@RequestParam</code> 注解指定了参数的自定义名称 “customParam”，它将从HTTP请求中获取该参数，并将其绑定到方法参数 <code>param</code>。</p><ol start="3"><li>设置默认值：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/example&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">exampleMethod</span><span class="params">(<span class="meta">@RequestParam(value = &quot;param&quot;, defaultValue = &quot;default&quot;)</span> String param)</span> &#123;</span><br><span class="line">    <span class="comment">// 方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个示例中，如果请求中没有名为 “param” 的参数，或者参数的值为空，那么方法参数 <code>param</code> 将被设置为默认值 “default”。</p><ol start="4"><li>必需的参数：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/example&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">exampleMethod</span><span class="params">(<span class="meta">@RequestParam(required = true)</span> String param)</span> &#123;</span><br><span class="line">    <span class="comment">// 方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个示例中，<code>@RequestParam</code> 注解的 <code>required</code> 属性被设置为 <code>true</code>，表示参数是必需的。如果请求中没有提供该参数，将会返回错误。</p><p>总结一下，<code>@RequestParam</code> 注解用于从HTTP请求中获取参数值，并将其绑定到Java方法的参数。它提供了许多选项，可以根据需要配置参数的名称、默认值和是否必需。这样，开发者可以方便地处理HTTP请求中的参数。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cesium面试题</title>
      <link href="/posts/a98e3ede/"/>
      <url>/posts/a98e3ede/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/img_convert/e0239a75f96830e577eef736ebcad965.png" alt="img"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="Cesium开发面试题"><a href="#Cesium开发面试题" class="headerlink" title="Cesium开发面试题"></a>Cesium开发面试题</h1><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><h2 id="1、请简要介绍一下Cesium的基本功能。"><a href="#1、请简要介绍一下Cesium的基本功能。" class="headerlink" title="1、请简要介绍一下Cesium的基本功能。"></a>1、请简要介绍一下Cesium的基本功能。</h2><p>答：Cesium是一款3D地球可视化引擎，可以在Web浏览器中显示高度真实感的3D地球场景，包括地形、地表纹理、3D建筑、水域等。它提供多种漫游和导航方式，支持多种地形和影像数据格式，以及3D Tiles、CZML等技术，可以用于实时位置追踪、天文数据显示、地下和空中场景等应用场景。</p><h2 id="2、请解释一下Cesium中的3D-Tiles技术是什么，以及它的作用是什么。"><a href="#2、请解释一下Cesium中的3D-Tiles技术是什么，以及它的作用是什么。" class="headerlink" title="2、请解释一下Cesium中的3D Tiles技术是什么，以及它的作用是什么。"></a>2、请解释一下Cesium中的3D Tiles技术是什么，以及它的作用是什么。</h2><p>  答：3D Tiles是一种用于高效地加载和显示大规模的3D地球数据的技术，可以将复杂的3D数据分层并进行高度优化。Cesium中的3D Tiles技术可以支持大规模的3D地球数据，包括城市、建筑、地形等，提高了数据的加载速度和显示效率。</p><h2 id="3、CZML是Cesium中的一个数据格式，它是什么，以及它用于描述什么样的场景？"><a href="#3、CZML是Cesium中的一个数据格式，它是什么，以及它用于描述什么样的场景？" class="headerlink" title="3、CZML是Cesium中的一个数据格式，它是什么，以及它用于描述什么样的场景？"></a>3、CZML是Cesium中的一个数据格式，它是什么，以及它用于描述什么样的场景？</h2><p>  答：CZML（Cesium Language）是一种描述和显示动态的地球场景的数据格式，它可以用于描述航班轨迹、气象数据、卫星运行轨迹等。CZML中可以包含实体的位置、速度、方向等信息，以及可视化效果的设置。</p><h2 id="4、请解释一下Cesium中的ImageryProvider是什么，以及它的作用是什么。"><a href="#4、请解释一下Cesium中的ImageryProvider是什么，以及它的作用是什么。" class="headerlink" title="4、请解释一下Cesium中的ImageryProvider是什么，以及它的作用是什么。"></a>4、请解释一下Cesium中的ImageryProvider是什么，以及它的作用是什么。</h2><p>  答：ImageryProvider是Cesium中的一个数据提供器，用于提供地图和影像数据。它可以从多种来源获取数据，比如Web Map Service（WMS）、Web Map Tile Service（WMTS）等，并在地球表面上显示出来。通过使用ImageryProvider，开发者可以轻松地获取并显示各种地图和影像数据。</p><h2 id="5、如何加载飞线"><a href="#5、如何加载飞线" class="headerlink" title="5、如何加载飞线"></a>5、如何加载飞线</h2><p>  答：1、创建polyLine实体</p><p>   2、计算带有弧度效果的点集数组作为polyline的positions属性参数</p><h2 id="6、如何设置飞线动效材质"><a href="#6、如何设置飞线动效材质" class="headerlink" title="6、如何设置飞线动效材质"></a>6、如何设置飞线动效材质</h2><p>答：1、创建cesium自定义材质类</p><p>2、创建shader，原理是通过贴图UV移动来实现流光效果</p><h2 id="7、如何在cesium地球上添加柱状图"><a href="#7、如何在cesium地球上添加柱状图" class="headerlink" title="7、如何在cesium地球上添加柱状图"></a>7、如何在cesium地球上添加柱状图</h2><p>答：1、创建entity实体，使用box属性；</p><p>2、dimensions设置长宽；</p><p>3、position设置中心点位置；</p><p>4、heightReference属性设置贴地属性；</p><h2 id="8、如何让柱状图跟随数据变化"><a href="#8、如何让柱状图跟随数据变化" class="headerlink" title="8、如何让柱状图跟随数据变化"></a>8、如何让柱状图跟随数据变化</h2><p>答：1、创建SampledPositionProperty对象</p><p>2、在不同的时间点绑定对应的值</p><p>  将填充好的SampledPositionProperty赋值给dimensions，实现位置随时间的偏移</p><h2 id="9、如何加载天气图的效果"><a href="#9、如何加载天气图的效果" class="headerlink" title="9、如何加载天气图的效果"></a>9、如何加载天气图的效果</h2><p>答：1、使用Wind3D类实现</p><p>实现原理是将nc格式的数据解析之后运用primitive绘制</p><p>​    2、Cesium官网有github的分享案例，需要修改鼠标事件影响该类绘制时的显示隐藏</p><h2 id="10、如何给cesium地球替换表面图层"><a href="#10、如何给cesium地球替换表面图层" class="headerlink" title="10、如何给cesium地球替换表面图层"></a>10、如何给cesium地球替换表面图层</h2><p>答：1、主要是在viewer的imageryLayers地图层级内对单独的layer图层的显示隐藏或者添加与移除，imageryLayers有add与remove方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2、viewer.imageryLayers.addImageryProvider(layer, num);</span><br><span class="line">viewer.imageryLayers.remove(viewer.imageryLayers.get(num), true);</span><br></pre></td></tr></table></figure><p>主要是这两个API<br>    3、注意不同的地图图层加载会有对应的投影方式，比如web墨卡托投影和wgs84</p><h2 id="11、cesium如何进行坐标转换"><a href="#11、cesium如何进行坐标转换" class="headerlink" title="11、cesium如何进行坐标转换"></a>11、cesium如何进行坐标转换</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">答：1、//经纬度转屏幕坐标</span><br><span class="line"></span><br><span class="line">LngLatToSceenCoordinates(lng, lat) &#123;</span><br><span class="line"></span><br><span class="line">let cartesian3 = Cesium.Cartesian3.fromDegrees(lng, lat);</span><br><span class="line"></span><br><span class="line">let cartesian2 = Cesium.SceneTransforms.wgs84ToWindowCoordinates(</span><br><span class="line"></span><br><span class="line">viewer.scene,</span><br><span class="line"></span><br><span class="line">cartesian3</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">return cartesian2;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">2、 //笛卡尔坐标转经纬度坐标</span><br><span class="line"></span><br><span class="line">Cartesian3ToLngLat(cartesian) &#123;</span><br><span class="line"></span><br><span class="line">let cartographic =</span><br><span class="line"></span><br><span class="line">viewer.scene.globe.ellipsoid.cartesianToCartographic(cartesian);</span><br><span class="line"></span><br><span class="line">let c_height = viewer.camera.positionCartographic.height;</span><br><span class="line"></span><br><span class="line">//将地图坐标（弧度）转为十进制的度数</span><br><span class="line"></span><br><span class="line">let lat_String = Cesium.Math.toDegrees(cartographic.latitude).toFixed(6);</span><br><span class="line"></span><br><span class="line">let log_String = Cesium.Math.toDegrees(cartographic.longitude).toFixed(6);</span><br><span class="line"></span><br><span class="line">return [</span><br><span class="line"></span><br><span class="line">parseFloat(log_String),</span><br><span class="line"></span><br><span class="line">parseFloat(lat_String),</span><br><span class="line"></span><br><span class="line">parseFloat(c_height),</span><br><span class="line"></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="12、cesium如何实现标记的添加"><a href="#12、cesium如何实现标记的添加" class="headerlink" title="12、cesium如何实现标记的添加"></a>12、cesium如何实现标记的添加</h2><p>  答：1、创建entity实体对象使用billboard对象场景图标挥着使用billboard collection使用primitive创建</p><h2 id="13、cesium如何实现鼠标拾取弹窗功能"><a href="#13、cesium如何实现鼠标拾取弹窗功能" class="headerlink" title="13、cesium如何实现鼠标拾取弹窗功能"></a>13、cesium如何实现鼠标拾取弹窗功能</h2><p>   答：1、创建new Cesium.ScreenSpaceEventHandler(canvas)对象</p><p> 2、注册鼠标点击事件<br>   3、使用let pick &#x3D; viewer.scene.pick(movement.position); 选取当前的entity</p><h2 id="14、如何设置cesium中的抗锯齿方法"><a href="#14、如何设置cesium中的抗锯齿方法" class="headerlink" title="14、如何设置cesium中的抗锯齿方法"></a>14、如何设置cesium中的抗锯齿方法</h2><p>  答：1、使用fxaa方法，效果较差</p><p>  2、使用msaa方法，但需要浏览器支持webGL2的api方法</p><p><img src="https://bcn.135editor.com/files/images/editor_styles/2b4dad3b5ce0324eb63cde4380e4cdfb.gif" alt="img"></p><p><img src="https://image2.135editor.com/cache/remote/aHR0cHM6Ly9tbWJpei5xbG9nby5jbi9tbWJpel9wbmcvdm5UNGhiYUxvWDZIWkQxZXFvRmljVXdwR3RPSklNamNzaWNNVVVZWDRvNHNNMGhQQ2RQRUtTV0pIYkdQb2MyVWJQaWNGVlNTM2ljU3hZRDdoOTdNUHYwSW9BLzA/d3hfZm10PXBuZw==" alt="img"></p><p><img src="https://bcn.135editor.com/files/images/editor_styles/8a370d08cb8dee16148088fd86f39e16.png" alt="img"></p><p><img src="https://bexp.135editor.com/files/users/498/4980660/202302/k5PHuh8T_I5qb.jpg?auth_key=1677427199-0-0-d90c72020ea7995dbf533d91bb976f8c" alt="qrcode_for_gh_e879ec750214_258.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cesium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前馈神经网路</title>
      <link href="/posts/169d769d/"/>
      <url>/posts/169d769d/</url>
      
        <content type="html"><![CDATA[<h1 id="前馈神经网路"><a href="#前馈神经网路" class="headerlink" title="前馈神经网路"></a>前馈神经网路</h1><h2 id="1、简单介绍"><a href="#1、简单介绍" class="headerlink" title="1、简单介绍"></a>1、简单介绍</h2><p><strong>前馈神经网络（Feedforward Neural Network，简称FNN）</strong>是一种基本的神经网络模型，它最早由美国心理学家Rosenblatt在1958年提出，是最早的一种神经网络模型。FNN的每个神经元都是单向连接的，信号只能从输入层流向输出层，不存在反馈（recurrent）的过程，因此也被称为“无记忆神经网络”。</p><p>FNN由输入层、隐藏层和输出层构成，其中输入层接收外部输入，输出层输出结果，而隐藏层则负责处理输入层的信息，提取出特征并将其传递给输出层。隐藏层通常包含多个神经元，每个神经元都连接着上一层的所有神经元和下一层的所有神经元。FNN的输出是根据输入与每个神经元之间的连接权值进行计算得出的。</p><p>FNN的训练过程通常是基于反向传播算法（Back Propagation，简称BP算法），该算法利用梯度下降法对网络参数进行调整，使得网络的输出结果能够逐渐逼近期望的输出结果。BP算法的基本思想是将误差逐层反向传播，并根据误差值对网络参数进行调整，以达到误差最小化的目的。在实际应用中，常常需要对神经网络进行大量的训练，以提高网络的泛化能力。</p><p>FNN在模式识别、数据挖掘、自然语言处理等领域中有广泛的应用，它能够有效地处理多维度、非线性和复杂的数据，具有良好的分类和预测性能。同时，FNN也具有一定的适应性，能够适应不同的数据类型和数据规模，并且具有良好的可扩展性，可以通过增加神经元和层数来提高网络的性能。</p><h2 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h2><p>目标：近似一些未知的理想函数</p><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325160313002.png" alt="image-20230325160313002"></p><p>理想分类器：<img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325160616559.png" alt="image-20230325160616559"></p><p>前馈网络：定义映射：<img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325160644995.png" alt="image-20230325160644995"></p><p>从可用的样本中学习参数<img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325160727626.png" alt="image-20230325160727626"></p><p>获得f*地较好的近似</p><p>信息流从输入开始贵，经过中间计算（即函数映射），生成类别</p><p>没有反馈连接（循环网络）</p><h2 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h2><p>函数f是许多不同函数的组合，例如：<img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325161151241.png" alt="image-20230325161151241"></p><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325161207536.png" alt="image-20230325161207536"></p><ul><li><p><input checked="" disabled="" type="checkbox"> 函数结构可以用有向无环图来描述（因此称为前馈网络）；</p></li><li><p><input checked="" disabled="" type="checkbox"> f（1）是第一层f（2）是第二层，以此类推；</p></li><li><p><input checked="" disabled="" type="checkbox"> 深度是函数组合链中最大的i</p></li><li><p><input checked="" disabled="" type="checkbox"> 最后一层称为输出层</p></li></ul><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325202045174.png" alt="image-20230325202045174"></p><h2 id="4、线性模型"><a href="#4、线性模型" class="headerlink" title="4、线性模型"></a>4、线性模型</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230325202418699.png" alt="image-20230325202418699"></p><h2 id="5、设计决策"><a href="#5、设计决策" class="headerlink" title="5、设计决策"></a>5、设计决策</h2><p>1、需要选择优化器、损失函数和输出形式</p><p>2、选择激活函数</p><p>3、机构设计（网络层数等）</p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反向传播算法</title>
      <link href="/posts/437097cd/"/>
      <url>/posts/437097cd/</url>
      
        <content type="html"><![CDATA[<h1 id="反向传播算法"><a href="#反向传播算法" class="headerlink" title="反向传播算法"></a>反向传播算法</h1><h2 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h2><p>反向传播算法是一种用于训练人工神经网络的优化算法。它利用梯度下降法来最小化神经网络的损失函数，并更新网络参数以提高模型的准确性。下面是反向传播算法的详细介绍。</p><p>反向传播算法的基本原理是利用链式法则（chain rule）来计算损失函数相对于每个网络参数的梯度。该算法从输出层开始，计算每个参数的梯度，并向后逐层传播，直到达到输入层。在每一层中，算法通过将该层的梯度与下一层的梯度相乘来计算该层的梯度。这个过程反向传播了误差，因此称为反向传播算法。</p><p>反向传播算法的步骤如下：</p><p>前向传播：对于给定的输入样本，计算神经网络的输出结果。</p><p>计算误差：将神经网络的输出结果与真实结果进行比较，并计算误差。误差通常使用损失函数（例如均方误差）来表示。</p><p>反向传播误差：从输出层开始，计算每个参数的梯度，并向后逐层传播，直到达到输入层。</p><p>更新参数：使用梯度下降法来更新神经网络的参数，以最小化损失函数。梯度下降法的目标是沿着梯度的相反方向更新参数，以使损失函数最小化。</p><p>重复步骤1-4，直到达到停止条件，例如达到最大迭代次数或达到期望的训练误差。</p><p>反向传播算法的优点是它可以处理复杂的非线性模型，并且可以使用梯度下降法快速优化模型参数。然而，该算法也存在一些缺点，例如容易陷入局部最优解，对初始权重值和学习率等参数敏感，以及可能存在梯度消失或爆炸的问题。</p><p>为了克服这些问题，研究人员已经提出了许多改进的反向传播算法，例如随机梯度下降法（SGD）、动量优化法（Momentum）、自适应学习率优化法（Adagrad、Adadelta、Adam等）等。这些算法使得神经网络的训练更加稳定和高效。</p><h2 id="2、如何学习权值"><a href="#2、如何学习权值" class="headerlink" title="2、如何学习权值"></a>2、如何学习权值</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326142148946.png" alt="image-20230326142148946"></p><p>1、初步想法：随机扰动一个权重，看看它是否提高了性能，而后保存更改</p><p>2、非常低效：对于一个权重的改变，需要在样本集上进行多次传递</p><p>3、其他想法：同时扰动所有权重，并将性能的提高与权重的变化联系起来</p><p>4、非常难以实现</p><p>5、所以：只扰动激活值（因为他门数量较少）但同样低效</p><h2 id="3、反向传播"><a href="#3、反向传播" class="headerlink" title="3、反向传播"></a>3、反向传播</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326142734973.png" alt="image-20230326142734973"></p><p>1、前向传播：接受输入x，通过中间阶段，获得输出y</p><p>2、训练结算：利用y计算标量损失</p><p>3、反向传播允许信息从损失函数反向流动来计算梯度</p><p>4、从训练数据来看，我们不知道隐藏的单元效果</p><p>5、但是，当我们改版一个隐藏的激活时，我们可以得到误差传播的速度</p><p>6、使用误差导数，也称之为hidden activites</p><p>7、每个隐藏的单元可以影响许多输出单元</p><p>8、单独的误差影响-&gt;合并这些影响</p><p>9、可以有效地计算隐藏单元的误差导数（一旦我们有了隐藏激活的误差导致，就很容易得到权重的误差导数）</p><h2 id="4、示例"><a href="#4、示例" class="headerlink" title="4、示例"></a>4、示例</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326143902055.png" alt="image-20230326143902055"></p><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326144435509.png" alt="image-20230326144435509"></p><h2 id="5、多维输出"><a href="#5、多维输出" class="headerlink" title="5、多维输出"></a>5、多维输出</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326145051267.png" alt="image-20230326145051267"></p><h2 id="6、实践"><a href="#6、实践" class="headerlink" title="6、实践"></a>6、实践</h2><ol><li>由上面的推导过程可以看到，反向传播就i是不断地利用求导的链式法则进行展开的过程；</li><li>这样的过程并不复杂，但是实际网络规模个很大的情况下非常繁琐，需要细心操作</li><li>常用的深度学习框架（Pytorch、Tensorflow）中均不需要我们手动编码进行反向传播</li><li>只要我们将前向传播的Tensor流动路径定义清楚，框架会自动帮助我们计算梯度并反传更新权值；</li><li>我们只需要关心损失函数的定义，网络框架的搭建等等更加宏观的内容</li><li>需要保证Tensor流图中的每一个Tensor均可以进行反向传播（例如Pytorch中需要关注requires——grade是否为true）</li></ol><h2 id="7、随机梯度下降"><a href="#7、随机梯度下降" class="headerlink" title="7、随机梯度下降"></a>7、随机梯度下降</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326150031055.png" alt="image-20230326150031055"></p><h2 id="8、Mini-batch随机梯度下降"><a href="#8、Mini-batch随机梯度下降" class="headerlink" title="8、Mini-batch随机梯度下降"></a>8、Mini-batch随机梯度下降</h2><p><img src="http://rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230326150113608.png" alt="image-20230326150113608"></p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Delaunay三角网</title>
      <link href="/posts/65ce02f4/"/>
      <url>/posts/65ce02f4/</url>
      
        <content type="html"><![CDATA[<h3 id="Delaunay-三角网"><a href="#Delaunay-三角网" class="headerlink" title="Delaunay 三角网"></a>Delaunay 三角网</h3><p>Delaunay 三角网是计算几何学中的一种三角剖分方法，用于将给定的点集合连接成不重叠且无内部点的三角形组成的网格结构。Delaunay 三角网具有一些重要的性质，使其在许多应用领域中得到广泛应用，例如计算机图形学、计算机视觉、地理信息系统和有限元分析等。</p><p>Delaunay 三角网的生成过程基于以下原则：给定一组点，如果点集中没有任何点在某个三角形的外接圆内部，则该三角形属于 Delaunay 三角网。换句话说，Delaunay 三角网中的任何一个三角形都满足其外接圆不包含其他点。这个性质使得 Delaunay 三角网具有最大化最小角的特点，使得三角形的形状更加均匀和稳定。</p><p>Delaunay 三角网的生成可以使用多种算法，其中最常用的是Bowyer-Watson算法，其基本思想如下：</p><ol><li><p>初始化：将点集中的几个点组成一个超级三角形，该超级三角形完全包含所有的点。</p></li><li><p>逐点插入：对于点集中的每个点，将其插入到当前的 Delaunay 三角网中。</p></li><li><p>修复：对于每个新插入的点，需要更新 Delaunay 三角网，确保满足 Delaunay 性质。这涉及到删除包含新点的三角形，然后重新连接形成新的三角形。</p></li><li><p>结束：当所有点都被插入并且网格满足 Delaunay 性质时，生成的三角网即为 Delaunay 三角网。</p></li></ol><p>Delaunay 三角网具有许多重要的性质，使其在实际应用中得到广泛应用：</p><ol><li><p>最大化最小角：Delaunay 三角网的三角形具有最大化最小角的特点，使得网格中的三角形形状更加均匀和稳定，有利于数值计算和模拟分析。</p></li><li><p>最小化边长：Delaunay 三角网的边长相对较小，可以提高网格的精度和拟合性能。</p></li><li><p>惟一性：给定一组点，对应的 Delaunay 三角网是唯一的，无论使用何种算法生成。</p></li><li><p>局部特性：Delaunay 三角网的局部结构与周围的点有关，当添加、删除或移动一个点时，只需要更新相邻的三角形，而不需要对整个网格进行重新计算。</p></li></ol><p>Delaunay 三</p><p>角网在许多领域中有广泛的应用，包括但不限于以下几个方面：</p><ol><li><p>计算机图形学：Delaunay 三角网可以用于生成高质量的三角网格，用于三维建模、形状重建、表面重建和体积渲染等任务。它能够确保生成的三角形形状合理，且没有不良的尖角或扭曲。</p></li><li><p>计算机视觉：Delaunay 三角网在图像处理和计算机视觉中扮演重要角色。例如，在图像拼接和图像配准中，可以使用 Delaunay 三角网进行特征点匹配和对齐。</p></li><li><p>地理信息系统（GIS）：Delaunay 三角网可用于对地理数据进行空间分析和处理。它可以用于地形建模、地貌分析、地理插值和地图绘制等任务。</p></li><li><p>有限元分析：Delaunay 三角网可作为有限元方法中的基础网格。它能够提供高质量的网格，用于模拟和分析复杂结构的物理行为，如弹性力学、流体力学和电磁场分析。</p></li><li><p>最近邻搜索：Delaunay 三角网的拓扑结构可以用于高效地搜索点集中某个点的最近邻。这在模式识别、数据挖掘和机器学习中是一个常见的任务。</p></li><li><p>仿真与优化：Delaunay 三角网可以作为仿真和优化算法的输入数据结构。它可以用于优化路径规划、传感器布局、机器人导航等应用，以提高系统的效率和性能。</p></li></ol><p>总结而言，Delaunay 三角网是一种强大的几何计算工具，具有均匀性、稳定性和最优化性质。它在计算机图形学、计算机视觉、地理信息系统、有限元分析等领域发挥着重要作用，并提供了许多实际问题的解决方案。</p><p><img src="/rx6zk4j2b.hn-bkt.clouddn.com/%E5%8D%9A%E5%AE%A2/image-20230706110328246.png" alt="image-20230706110328246"></p>]]></content>
      
      
      <categories>
          
          <category> 学术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>序言</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>序言</p><p>欢迎来到我的博客！在这个快速发展的数字时代，技术成为推动社会进步和创新的关键力量。作为一个对技术充满热情的人，我创建了这个博客网站，旨在与大家分享我的知识和经验，特别是在前端、后端和GIS等技术领域。</p><p>我相信技术的力量可以改变世界，而这个博客是我为了将这种信念传递给更多人而建立的。在这里，我将探索各种前沿技术、最佳实践和创新思维，希望能够激发你的灵感，并帮助你在技术的海洋中航行。</p><p>在前端方面，我将分享关于HTML、CSS和JavaScript等技术的最新趋势和最佳实践。你将了解到如何构建漂亮、响应式和交互式的用户界面，以及如何优化网站的性能和用户体验。</p><p>对于后端开发，我将深入探讨各种编程语言和框架，如Python、Java和Node.js等，以及数据库设计和API开发。你将学习到如何构建强大的后端系统，实现数据存储、处理和传输，以及如何设计可扩展和高性能的应用程序。</p><p>另外，我对地理信息系统（GIS）也有浓厚的兴趣。GIS技术结合了地理数据和信息系统，可以用于地图制作、空间分析和位置智能等领域。我将分享GIS的基础知识、工具和应用案例，帮助你了解如何利用地理空间数据解决现实世界的问题。</p><p>通过这个博客网站，我希望能够建立一个技术交流和学习的社区。我鼓励读者们积极参与讨论，提出问题和分享自己的见解。只有通过不断的学习和合作，我们才能够共同成长，并推动技术的进步。</p><p>最后，感谢你的光临！我希望我的博客能为你提供有价值的内容，激发你的创造力和求知欲。如果你对任何技术相关的话题感兴趣，或者有任何问题和建议，都请留言给我。让我们一起踏上这个技术之旅，共同探索无限可能！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
